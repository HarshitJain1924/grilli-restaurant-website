pipeline {
    // agent any // Remove or comment out this line
    agent {
        docker {
            image 'docker:latest' // Use an image that has the Docker CLI
            // If needed (depends on setup), ensure socket access for agent:
            // args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        // !! Replace 'your-dockerhub-username' with your actual Docker Hub username !!
        DOCKERHUB_USERNAME = 'harshitjain1924' // <-- Make sure this is correct!
        IMAGE_NAME = "${env.DOCKERHUB_USERNAME}/grilli-website"
        IMAGE_TAG = "build-${env.BUILD_NUMBER}"
    }

    stages {
        // ... rest of your stages (Checkout, Build, Push) remain the same ...
         stage('Checkout') {
            steps {
                // Checkout the source code from GitHub (root of the repo)
                // Note: Checkout usually happens automatically before agent starts
                // but explicit checkout inside agent can also work if needed.
                // Keeping your existing checkout step here:
                git url: 'https://github.com/HarshitJain1924/grilli-restaurant-website.git', branch: 'main'
                script {
                    def commitHash = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
                    echo "Checked out commit: ${commitHash}"
                    echo "Listing files in workspace:"
                    sh 'ls -la'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image: ${env.IMAGE_NAME}:${env.IMAGE_TAG}"
                sh "docker build -t ${env.IMAGE_NAME}:${env.IMAGE_TAG} ."
                sh "docker tag ${env.IMAGE_NAME}:${env.IMAGE_TAG} ${env.IMAGE_NAME}:latest"
            }
        }

        stage('Push to Docker Hub') {
            steps {
                echo "Pushing image ${env.IMAGE_NAME} to Docker Hub..."
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh "echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin"
                    sh "docker push ${env.IMAGE_NAME}:${env.IMAGE_TAG}"
                    sh "docker push ${env.IMAGE_NAME}:latest"
                }
            }
        }
    }

    post {
         always {
            echo "Logging out from Docker Hub..."
            // This will now run inside the docker:latest agent
            sh "docker logout"
         }
        // ... success / failure blocks ...
        success {
            echo 'Pipeline successful!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}